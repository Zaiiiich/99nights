--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

--// Player
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

--// Remotes


--// Config
local skipLoopTime = 210 -- 3m30s
local shCooldown = 22 * 60

--// State
local skipPaused = true
local shPaused = true
local shRunning = false
local activeTweens = {}

--// Default saved CFrames
local savedCFrame1 = CFrame.new(340.36, 9.44, -545.35)
local savedCFrame2 = CFrame.new(-13.97, 28.62, 17.83)

--// GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AutoToolsPanel"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 260, 0, 300)
frame.Position = UDim2.new(0.5, -130, 0.5, -150)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundColor3 = Color3.fromRGB(222, 184, 135)
frame.BackgroundTransparency = 0.08
frame.Parent = screenGui

-- Title bar
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Auto Longrun - Zai"
title.TextColor3 = Color3.fromRGB(160, 82, 45)
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Center

-- Minimize button (right corner, black)
local minimizeButton = Instance.new("TextButton", frame)
minimizeButton.Size = UDim2.new(0, 28, 0, 24)
minimizeButton.Position = UDim2.new(1, -6, 0, 3)
minimizeButton.AnchorPoint = Vector2.new(1, 0)
minimizeButton.BackgroundTransparency = 0
minimizeButton.BackgroundColor3 = Color3.fromRGB(0,0,0)
minimizeButton.Text = "-"
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextColor3 = Color3.fromRGB(255,255,255)
minimizeButton.TextSize = 18
local minimizeCorner = Instance.new("UICorner", minimizeButton)
minimizeCorner.CornerRadius = UDim.new(0.5, 0)

-- Scroll area
local scroll = Instance.new("ScrollingFrame", frame)
scroll.Name = "ContentScroll"
scroll.BackgroundTransparency = 1
scroll.Size = UDim2.new(1, -10, 1, -40)
scroll.Position = UDim2.new(0, 5, 0, 35)
scroll.CanvasSize = UDim2.new(0, 0, 0, 420)
scroll.ScrollBarThickness = 6

local layout = Instance.new("UIListLayout", scroll)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 8)

-- Helpers
local function makeLabel(text)
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1, -20, 0, 20)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = Color3.fromRGB(139, 69, 19)
    lbl.Font = Enum.Font.GothamBold
    lbl.TextSize = 14
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.TextWrapped = true
    lbl.Parent = scroll
    return lbl
end

local function makeButton(labelText)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 120, 0, 26)
    btn.BackgroundColor3 = Color3.fromRGB(245, 222, 179)
    btn.Text = labelText
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 13
    btn.TextColor3 = Color3.fromRGB(160, 82, 45)
    btn.Parent = scroll
    local corner = Instance.new("UICorner", btn)
    corner.CornerRadius = UDim.new(0.5, 0)
    return btn
end

-- Build UI contents
local skipLabel = makeLabel("Auto Skip Night")
skipLabel.TextSize = 15

local skipHint = Instance.new("TextLabel")
skipHint.Size = UDim2.new(1, -20, 0, 16)
skipHint.BackgroundTransparency = 1
skipHint.Text = "(Press Start at 1:14 during the night)"
skipHint.TextColor3 = Color3.fromRGB(160,82,45)
skipHint.Font = Enum.Font.Gotham
skipHint.TextSize = 12
skipHint.TextXAlignment = Enum.TextXAlignment.Left
skipHint.Parent = scroll

local skipBtn = makeButton("Start")
local skipTimer = makeLabel("Timer: OFF")
skipTimer.TextColor3 = Color3.fromRGB(160,82,45)

local shLabel = makeLabel("Auto Stronghold")
shLabel.TextSize = 15

local shHint = Instance.new("TextLabel")
shHint.Size = UDim2.new(1, -20, 0, 16)
shHint.BackgroundTransparency = 1
shHint.Text = "(Set the Location first)"
shHint.TextColor3 = Color3.fromRGB(160,82,45)
shHint.Font = Enum.Font.Gotham
shHint.TextSize = 12
shHint.TextXAlignment = Enum.TextXAlignment.Left
shHint.Parent = scroll

local shBtn = makeButton("Start")
local shTimer = makeLabel("Timer: OFF")
shTimer.TextColor3 = Color3.fromRGB(160,82,45)

local cf1Label = makeLabel("Stronghold Door")
local setC1Btn = makeButton("Set Location")

local cf2Label = makeLabel("Campfire")
local setC2Btn = makeButton("Set Location")

-- Restore button (centered, circular beige button with "Start" text)
local restoreButton = Instance.new("TextButton", screenGui)
restoreButton.Size = UDim2.new(0, 64, 0, 64)
restoreButton.Position = UDim2.new(0.5, 0, 0.5, 0)
restoreButton.AnchorPoint = Vector2.new(0.5, 0.5)
restoreButton.BackgroundColor3 = Color3.fromRGB(245, 222, 179)
restoreButton.BackgroundTransparency = 0
restoreButton.Text = "Start"
restoreButton.TextColor3 = Color3.fromRGB(139, 69, 19)
restoreButton.Font = Enum.Font.GothamBold
restoreButton.TextSize = 20
restoreButton.Visible = false
restoreButton.ClipsDescendants = true
local restoreUICorner = Instance.new("UICorner", restoreButton)
restoreUICorner.CornerRadius = UDim.new(1, 0)

-- Auto-fit scroll
local function updateCanvas()
    local contentSize = layout.AbsoluteContentSize.Y + 16
    scroll.CanvasSize = UDim2.new(0, 0, 0, math.max(contentSize, 300))
end
layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvas)
updateCanvas()

-- Dragging
local function makeDraggable(handle, root)
    handle.Active = true
    local dragging, dragStart, startPos
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = root.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            root.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
end
makeDraggable(title, frame)
makeDraggable(restoreButton, restoreButton)

-- Stop tweens
local function stopTweens()
    for _, t in ipairs(activeTweens) do
        if t and t.PlaybackState == Enum.PlaybackState.Playing then
            t:Cancel()
        end
    end
    activeTweens = {}
end

-- Stronghold runner
local function runSH()
    if shRunning or shPaused then return end
    shRunning = true
    shTimer.Text = "Running..."
    shTimer.TextColor3 = Color3.fromRGB(34,139,34)

    task.wait(0.8)
    if shPaused then shRunning = false shTimer.Text = "Timer: OFF" return end

    pcall(function()
        toggleDoor:FireServer("FireAllClients", workspace.Map.Landmarks.Stronghold.Functional.EntryDoors, true)
    end)
    hrp.CFrame = savedCFrame1

    local forwardDistance = 35
    local sideDistance = 40
    local speed = 45

    local firstDestination = hrp.Position + (hrp.CFrame.LookVector * forwardDistance)
    local secondDestination = firstDestination + (hrp.CFrame.RightVector * sideDistance)

    local tween1 = TweenService:Create(hrp, TweenInfo.new((firstDestination - hrp.Position).Magnitude / speed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(firstDestination)})
    table.insert(activeTweens, tween1)
    tween1:Play()
    tween1.Completed:Wait()
    if shPaused then stopTweens() shRunning = false shTimer.Text = "Timer: OFF" return end

    local tween2 = TweenService:Create(hrp, TweenInfo.new((secondDestination - firstDestination).Magnitude / speed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(secondDestination)})
    table.insert(activeTweens, tween2)
    tween2:Play()
    tween2.Completed:Wait()
    if shPaused then stopTweens() shRunning = false shTimer.Text = "Timer: OFF" return end

    table.clear(activeTweens)
    task.wait(0.4)
    if shPaused then shRunning = false shTimer.Text = "Timer: OFF" return end

    hrp.CFrame = savedCFrame2
    shRunning = false
    shTimer.Text = "Waiting..."
end

-- Skip Night loop
task.spawn(function()
    while true do
        if not skipPaused then
            pcall(function() remoteEvent:FireServer(target) end)
            local countdown = skipLoopTime
            while countdown > 0 and not skipPaused do
                skipTimer.RichText = true
                skipTimer.Text = "Cooldown: <font color='rgb(34,139,34)'>" .. string.format("%02d:%02d", math.floor(countdown/60), countdown%60) .. "</font>"
                skipTimer.TextColor3 = Color3.fromRGB(160,82,45)
                task.wait(1)
                countdown -= 1
            end
        else
            task.wait(0.5)
        end
    end
end)

-- Stronghold loop
task.spawn(function()
    while true do
        if not shPaused and not shRunning then
            runSH()
            local countdown = shCooldown
            while countdown > 0 and not shPaused do
                shTimer.RichText = true
                shTimer.Text = "Cooldown: <font color='rgb(34,139,34)'>" .. string.format("%02d:%02d", math.floor(countdown/60), countdown%60) .. "</font>"
                shTimer.TextColor3 = Color3.fromRGB(160,82,45)
                task.wait(1)
                countdown -= 1
            end
            if countdown <= 0 and not shPaused then
                shTimer.Text = "Ready to run!"
                shTimer.TextColor3 = Color3.fromRGB(34,139,34)
                task.wait(0.5)
            end
        else
            task.wait(0.5)
        end
    end
end)

-- Button bindings
skipBtn.MouseButton1Click:Connect(function()
    skipPaused = not skipPaused
    skipBtn.Text = skipPaused and "Start" or "Pause"
    skipTimer.Text = skipPaused and "Timer: OFF" or "Running..."
    skipTimer.TextColor3 = skipPaused and Color3.fromRGB(160,82,45) or Color3.fromRGB(34,139,34)
end)

shBtn.MouseButton1Click:Connect(function()
    shPaused = not shPaused
    shBtn.Text = shPaused and "Start" or "Pause"
    shTimer.Text = shPaused and "Timer: OFF" or "Running..."
    shTimer.TextColor3 = shPaused and Color3.fromRGB(160,82,45) or Color3.fromRGB(34,139,34)
    if shPaused then
        stopTweens()
        shRunning = false
    end
end)

setC1Btn.MouseButton1Click:Connect(function()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local cf = player.Character.HumanoidRootPart.CFrame
        savedCFrame1 = cf
        setC1Btn.Text = "Set ✓"
        task.delay(1.5, function() setC1Btn.Text = "Set Location" end)
    end
end)

setC2Btn.MouseButton1Click:Connect(function()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local cf = player.Character.HumanoidRootPart.CFrame
        savedCFrame2 = cf
        setC2Btn.Text = "Set ✓"
        task.delay(1.5, function() setC2Btn.Text = "Set Location" end)
    end
end)

-- Minimize / Restore (center restore button)
minimizeButton.MouseButton1Click:Connect(function()
    frame.Visible = false
    restoreButton.Visible = true
end)

restoreButton.MouseButton1Click:Connect(function()
    frame.Visible = true
    restoreButton.Visible = false
end)
